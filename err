g++ -c src/kit-s/eval_entry.cpp -o build/objects/kit-s/eval_entry.o -Wall -Wextra -g -Iinc
g++ -c src/lexer/lexer.cpp -o build/objects/lexer/lexer.o -Wall -Wextra -g -Iinc
g++ -c src/kit-s/eval_stmt.cpp -o build/objects/kit-s/eval_stmt.o -Wall -Wextra -g -Iinc
g++ -c src/kit-s/eval_expr.cpp -o build/objects/kit-s/eval_expr.o -Wall -Wextra -g -Iinc
g++ -c src/kit-s/eval.cpp -o build/objects/kit-s/eval.o -Wall -Wextra -g -Iinc
g++ -c src/kit-s/eval_decl.cpp -o build/objects/kit-s/eval_decl.o -Wall -Wextra -g -Iinc
g++ -c src/kit-s/main.cpp -o build/objects/kit-s/main.o -Wall -Wextra -g -Iinc
g++ -c src/parse/parser.cpp -o build/objects/parse/parser.o -Wall -Wextra -g -Iinc
In file included from src/kit-s/eval_entry.cpp:5:
inc/interpret.hpp: In function ‘Value call_subr(const std::string&, const std::vector<Value>&)’:
inc/interpret.hpp:59:44: error: invalid use of incomplete type ‘const struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                                            ^
inc/interpret.hpp:59:27: note: forward declaration of ‘struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                           ^~~~~~~~~~~~~~~
inc/interpret.hpp:60:15: error: ‘e’ was not declared in this scope
   60 |         ret = e.value;
      |               ^
inc/interpret.hpp: In function ‘bool is_user_type(const std::string&)’:
inc/interpret.hpp:104:21: error: no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator, const std::string&)’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from inc/lexer.hpp:6,
                 from inc/stmt.hpp:5,
                 from inc/eval.hpp:19,
                 from src/kit-s/eval_entry.cpp:1:
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note: candidate: ‘template<class _CharT2> typename __gnu_cxx::__enable_if<std::__is_char<_CharT2>::__value, std::istreambuf_iterator<_CharT> >::__type std::find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, const _CharT2&)’
  435 |     find(istreambuf_iterator<_CharT> __first,
      |     ^~~~
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note:   template argument deduction/substitution failed:
inc/interpret.hpp:104:21: note:   ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ is not derived from ‘std::istreambuf_iterator<_CharT>’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval_entry.cpp: In member function ‘Value Evaluator::eval(const Node*)’:
src/kit-s/eval_entry.cpp:19:1: warning: no return statement in function returning non-void [-Wreturn-type]
   19 | }
      | ^
In file included from src/kit-s/eval_expr.cpp:11:
inc/interpret.hpp: In function ‘Value call_subr(const std::string&, const std::vector<Value>&)’:
inc/interpret.hpp:59:44: error: invalid use of incomplete type ‘const struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                                            ^
inc/interpret.hpp:59:27: note: forward declaration of ‘struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                           ^~~~~~~~~~~~~~~
inc/interpret.hpp:60:15: error: ‘e’ was not declared in this scope
   60 |         ret = e.value;
      |               ^
inc/interpret.hpp: In function ‘bool is_user_type(const std::string&)’:
inc/interpret.hpp:104:21: error: no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator, const std::string&)’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from src/kit-s/eval_expr.cpp:1:
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note: candidate: ‘template<class _CharT2> typename __gnu_cxx::__enable_if<std::__is_char<_CharT2>::__value, std::istreambuf_iterator<_CharT> >::__type std::find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, const _CharT2&)’
  435 |     find(istreambuf_iterator<_CharT> __first,
      |     ^~~~
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note:   template argument deduction/substitution failed:
inc/interpret.hpp:104:21: note:   ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ is not derived from ‘std::istreambuf_iterator<_CharT>’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_ident(const IdentExpr*)’:
src/kit-s/eval_expr.cpp:39:15: error: ‘current_scope’ was not declared in this scope
   39 |     auto it = current_scope.find(i->name);
      |               ^~~~~~~~~~~~~
src/kit-s/eval_expr.cpp:43:15: error: ‘RuntimeError’ was not declared in this scope
   43 |         throw RuntimeError("Undefined identifier: " + i->name);
      |               ^~~~~~~~~~~~
In file included from src/kit-s/eval.cpp:6:
inc/interpret.hpp: In function ‘Value call_subr(const std::string&, const std::vector<Value>&)’:
inc/interpret.hpp:59:44: error: invalid use of incomplete type ‘const struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                                            ^
inc/interpret.hpp:59:27: note: forward declaration of ‘struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                           ^~~~~~~~~~~~~~~
In file included from src/kit-s/eval_decl.cpp:5:
inc/interpret.hpp: In function ‘Value call_subr(const std::string&, const std::vector<Value>&)’:
inc/interpret.hpp:59:44: error: invalid use of incomplete type ‘const struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                                            ^
inc/interpret.hpp:59:27: note: forward declaration of ‘struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                           ^~~~~~~~~~~~~~~
inc/interpret.hpp:60:15: error: ‘e’ was not declared in this scope
   60 |         ret = e.value;
      |               ^
inc/interpret.hpp:60:15: error: ‘e’ was not declared in this scope
   60 |         ret = e.value;
      |               ^
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_binary(const BinaryExpr*)’:
src/kit-s/eval_expr.cpp:55:31: error: ‘RuntimeError’ was not declared in this scope
   55 |         if (right == 0) throw RuntimeError("Division by zero");
      |                               ^~~~~~~~~~~~
src/kit-s/eval_expr.cpp:67:11: error: ‘RuntimeError’ was not declared in this scope
   67 |     throw RuntimeError("Unknown binary operator: " + b->op);
      |           ^~~~~~~~~~~~
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_unary(const UnaryExpr*)’:
src/kit-s/eval_expr.cpp:73:30: error: no match for ‘operator-’ (operand type is ‘Value’)
   73 |     if (u->op == "-") return -operand;
      |                              ^~~~~~~~
In file included from inc/ast.hpp:8,
                 from inc/eval.hpp:3,
                 from src/kit-s/eval_expr.cpp:2:
inc/value.hpp:116:11: note: candidate: ‘Value Value::operator-(const Value&) const’
  116 |     Value operator-(const Value& other) const { return arithmeticOp(other, std::minus<>()); }
      |           ^~~~~~~~
inc/value.hpp:116:11: note:   candidate expects 1 argument, 0 provided
inc/interpret.hpp: In function ‘bool is_user_type(const std::string&)’:
inc/interpret.hpp:104:21: error: no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator, const std::string&)’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from inc/lexer.hpp:6,
                 from inc/stmt.hpp:5,
                 from inc/eval.hpp:19,
                 from src/kit-s/eval_decl.cpp:1:
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note: candidate: ‘template<class _CharT2> typename __gnu_cxx::__enable_if<std::__is_char<_CharT2>::__value, std::istreambuf_iterator<_CharT> >::__type std::find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, const _CharT2&)’
  435 |     find(istreambuf_iterator<_CharT> __first,
      |     ^~~~
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note:   template argument deduction/substitution failed:
inc/interpret.hpp:104:21: note:   ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ is not derived from ‘std::istreambuf_iterator<_CharT>’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval_decl.cpp: In function ‘void eval_decl(const Decl*)’:
src/kit-s/eval_decl.cpp:18:13: error: ‘eval_var_decl’ was not declared in this scope; did you mean ‘eval_inc_dec’?
   18 |             eval_var_decl(static_cast<const VarDecl*>(d));
      |             ^~~~~~~~~~~~~
      |             eval_inc_dec
src/kit-s/eval_decl.cpp:21:13: error: ‘eval_subr_decl’ was not declared in this scope; did you mean ‘eval_inc_dec’?
   21 |             eval_subr_decl(static_cast<const SubrDecl*>(d));
      |             ^~~~~~~~~~~~~~
      |             eval_inc_dec
src/kit-s/eval_decl.cpp:16:12: warning: enumeration value ‘Struct’ not handled in switch [-Wswitch]
   16 |     switch (d->kind) {
      |            ^
src/kit-s/eval_decl.cpp:16:12: warning: enumeration value ‘Enum’ not handled in switch [-Wswitch]
src/kit-s/eval_decl.cpp:16:12: warning: enumeration value ‘Union’ not handled in switch [-Wswitch]
src/kit-s/eval_decl.cpp:16:12: warning: enumeration value ‘Tool’ not handled in switch [-Wswitch]
src/kit-s/eval_decl.cpp:16:12: warning: enumeration value ‘Kit’ not handled in switch [-Wswitch]
inc/interpret.hpp: In function ‘bool is_user_type(const std::string&)’:
inc/interpret.hpp:104:21: error: no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator, const std::string&)’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from src/kit-s/eval.cpp:1:
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note: candidate: ‘template<class _CharT2> typename __gnu_cxx::__enable_if<std::__is_char<_CharT2>::__value, std::istreambuf_iterator<_CharT> >::__type std::find(istreambuf_iterator<_CharT>, istreambuf_iterator<_CharT>, const _CharT2&)’
  435 |     find(istreambuf_iterator<_CharT> __first,
      |     ^~~~
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note:   template argument deduction/substitution failed:
inc/interpret.hpp:104:21: note:   ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ is not derived from ‘std::istreambuf_iterator<_CharT>’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval_expr.cpp:76:11: error: ‘RuntimeError’ was not declared in this scope
   76 |     throw RuntimeError("Unknown unary operator: " + u->op);
      |           ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp: In function ‘void eval_var_decl(const VarDecl*)’:
src/kit-s/eval_decl.cpp:46:15: error: ‘RuntimeError’ was not declared in this scope
   46 |         throw RuntimeError("Variable " + v->name + " declared with void type");
      |               ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:48:15: error: ‘RuntimeError’ was not declared in this scope
   48 |         throw RuntimeError("Variable " + v->name + " of user-defined type " + v->type_name + " must be initialized");
      |               ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:51:15: error: ‘RuntimeError’ was not declared in this scope
   51 |         throw RuntimeError("Unknown type for variable " + v->name + ": " + v->type_name);
      |               ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:52:9: error: ‘init’ was not declared in this scope; did you mean ‘int’?
   52 |     if (init.val.type != ValueType::USERDEFINED && v->init && stringToValueType(v->type_name) == ValueType::USERDEFINED)
      |         ^~~~
      |         int
src/kit-s/eval_decl.cpp:53:15: error: ‘RuntimeError’ was not declared in this scope
   53 |         throw RuntimeError("Type mismatch in initialization of variable " + v->name +
      |               ^~~~~~~~~~~~
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_call(const CallExpr*)’:
src/kit-s/eval_expr.cpp:82:15: error: ‘RuntimeError’ was not declared in this scope
   82 |         throw RuntimeError("Attempted to call a non-function value");
      |               ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:56:26: error: ‘eval_expr’ was not declared in this scope
   56 |         Value expr_val = eval_expr(v->init.get());
      |                          ^~~~~~~~~
src/kit-s/eval_decl.cpp:59:19: error: ‘RuntimeError’ was not declared in this scope
   59 |             throw RuntimeError("Type mismatch in initialization of variable " + v->name +
      |                   ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:65:26: error: ‘eval_expr’ was not declared in this scope
   65 |         Value expr_val = eval_expr(v->init.get());
      |                          ^~~~~~~~~
src/kit-s/eval_decl.cpp:75:23: error: ‘RuntimeError’ was not declared in this scope
   75 |                 throw RuntimeError("Type mismatch in initialization of variable " + v->name +
      |                       ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp: In function ‘void eval_subr_decl(const SubrDecl*)’:
src/kit-s/eval_decl.cpp:88:9: error: ‘current_scope’ was not declared in this scope
   88 |     if (current_scope.find(s->name) != current_scope.end()) {
      |         ^~~~~~~~~~~~~
src/kit-s/eval_decl.cpp:89:15: error: ‘RuntimeError’ was not declared in this scope
   89 |         throw RuntimeError("Subroutine " + s->name + " already declared in this scope");
      |               ^~~~~~~~~~~~
src/kit-s/eval_decl.cpp:97:5: error: ‘current_scope’ was not declared in this scope
   97 |     current_scope[s->name] = subr_val;
      |     ^~~~~~~~~~~~~
In file included from src/kit-s/eval_stmt.cpp:6:
inc/interpret.hpp: In function ‘Value call_subr(const std::string&, const std::vector<Value>&)’:
inc/interpret.hpp:59:44: error: invalid use of incomplete type ‘const struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                                            ^
inc/interpret.hpp:59:27: note: forward declaration of ‘struct call_subr(const std::string&, const std::vector<Value>&)::ReturnException’
   59 |     } catch (const struct ReturnException& e) {
      |                           ^~~~~~~~~~~~~~~
inc/interpret.hpp:60:15: error: ‘e’ was not declared in this scope
   60 |         ret = e.value;
      |               ^
inc/interpret.hpp: In function ‘bool is_user_type(const std::string&)’:
inc/interpret.hpp:104:21: error: no matching function for call to ‘find(std::vector<std::__cxx11::basic_string<char> >::iterator, std::vector<std::__cxx11::basic_string<char> >::iterator, const std::string&)’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from inc/lexer.hpp:6,
                 from inc/stmt.hpp:5,
                 from inc/eval.hpp:19,
                 from src/kit-s/eval_stmt.cpp:2:
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note: candidate: ‘template<class _CharT2> typename __gnu_cxx::__enable_if<std::__is_char<_CharT2>::__value, std::istreambuf_iterator<_CharT, std::char_traits<_CharT> > >::__type std::find(istreambuf_iterator<_CharT, char_traits<_CharT> >, istreambuf_iterator<_CharT, char_traits<_CharT> >, const _CharT2&)’
  435 |     find(istreambuf_iterator<_CharT> __first,
      |     ^~~~
/usr/include/c++/14/bits/streambuf_iterator.h:435:5: note:   template argument deduction/substitution failed:
inc/interpret.hpp:104:21: note:   ‘__gnu_cxx::__normal_iterator<std::__cxx11::basic_string<char>*, std::vector<std::__cxx11::basic_string<char> > >’ is not derived from ‘std::istreambuf_iterator<_CharT, std::char_traits<_CharT> >’
  104 |     return std::find(user_types.begin(), user_types.end(), name) != user_types.end();
      |            ~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval_stmt.cpp: In member function ‘Value Evaluator::eval_stmt(const Stmt*)’:
src/kit-s/eval_stmt.cpp:13:34: error: could not convert ‘((Evaluator*)this)->Evaluator::eval_expr_stmt(((const ExprStmt*)s))’ from ‘void’ to ‘Value’
   13 |             return eval_expr_stmt(static_cast<const ExprStmt*>(s));
      |                    ~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      |                                  |
      |                                  void
src/kit-s/eval_stmt.cpp: In member function ‘Value Evaluator::eval_block(const BlockStmt*)’:
src/kit-s/eval_stmt.cpp:33:61: error: ‘current_scope’ was not declared in this scope
   33 |     std::unordered_map<std::string, Value> previous_scope = current_scope;
      |                                                             ^~~~~~~~~~~~~
src/kit-s/eval_stmt.cpp:39:19: error: ‘RuntimeError’ was not declared in this scope
   39 |             throw RuntimeError("Return type mismatch: expected " +
      |                   ^~~~~~~~~~~~
src/kit-s/eval_stmt.cpp:42:19: error: ‘RuntimeError’ was not declared in this scope
   42 |             throw RuntimeError("Return type mismatch: expected void but got value");
      |                   ^~~~~~~~~~~~
src/kit-s/eval_stmt.cpp:44:19: error: ‘RuntimeError’ was not declared in this scope
   44 |             throw RuntimeError("Return type mismatch: expected " + b->rturn_stmt->type_name +
      |                   ^~~~~~~~~~~~
src/kit-s/eval_stmt.cpp: In member function ‘void Evaluator::eval_expr_stmt(const ExprStmt*)’:
src/kit-s/eval_stmt.cpp:55:10: error: expected unqualified-id before ‘static_cast’
   55 |     std::static_cast<void>(eval_expr(es->expr.get()));
      |          ^~~~~~~~~~~
src/kit-s/eval_stmt.cpp:54:48: warning: unused parameter ‘es’ [-Wunused-parameter]
   54 | void Evaluator::eval_expr_stmt(const ExprStmt* es){
      |                                ~~~~~~~~~~~~~~~~^~
src/kit-s/eval_stmt.cpp: In member function ‘Value Evaluator::eval_if(const IfStmt*)’:
src/kit-s/eval_stmt.cpp:61:9: error: could not convert ‘cond’ from ‘Value’ to ‘bool’
   61 |     if (cond) {
      |         ^~~~
      |         |
      |         Value
src/kit-s/eval_stmt.cpp: In member function ‘Value Evaluator::eval_while(const WhileStmt*)’:
src/kit-s/eval_stmt.cpp:71:21: error: could not convert ‘Evaluator::eval_expr(const Expr*)(((const Expr*)w->WhileStmt::cond.std::unique_ptr<Expr>::get()))’ from ‘Value’ to ‘bool’
   71 |     while (eval_expr(w->cond.get())) {
      |            ~~~~~~~~~^~~~~~~~~~~~~~~
      |                     |
      |                     Value
src/kit-s/eval_stmt.cpp: In member function ‘Value Evaluator::eval_recheck(const RecheckStmt*)’:
src/kit-s/eval_stmt.cpp:96:35: error: ‘const struct RecheckStmt’ has no member named ‘expr’
   96 |     Value expr_val = eval_expr(r->expr.get());
      |                                   ^~~~
src/kit-s/eval_stmt.cpp:103:20: error: ‘const struct RecheckStmt’ has no member named ‘execute_first_match’
  103 |             if (r->execute_first_match) return ret; // Exit after first match if "only" mode
      |                    ^~~~~~~~~~~~~~~~~~~
In file included from inc/value.hpp:3,
                 from inc/lexer.hpp:8,
                 from src/lexer/lexer.cpp:1:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/char_traits.h:42,
                 from /usr/include/c++/14/string:42,
                 from inc/lexer.hpp:3:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from inc/lexer.hpp:4:
/usr/include/c++/14/array:303:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator==(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  303 |     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/14/array:303:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::array<_Tp, _Nm>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from inc/lexer.hpp:6:
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator==(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  234 |     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from inc/lexer.hpp:7:
/usr/include/c++/14/optional:1232:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Tp, _Up> std::operator==(const optional<_Tp>&, const optional<_Up>&)’
 1232 |     operator==(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1232:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1292:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator==(const optional<_Tp>&, nullopt_t)’
 1292 |     operator==(const optional<_Tp>& __lhs, nullopt_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/14/optional:1292:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1303:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator==(nullopt_t, const optional<_Tp>&)’
 1303 |     operator==(nullopt_t, const optional<_Tp>& __rhs) noexcept
      |     ^~~~~~~~
/usr/include/c++/14/optional:1303:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1360:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Tp, _Up> std::operator==(const optional<_Tp>&, const _Up&)’
 1360 |     operator==(const optional<_Tp>& __lhs, const _Up& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1360:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1366:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Up, _Tp> std::operator==(const _Up&, const optional<_Tp>&)’
 1366 |     operator==(const _Up& __lhs, const optional<_Tp>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1366:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/ios_base.h:46,
                 from /usr/include/c++/14/ios:44:
/usr/include/c++/14/system_error:449:3: note: candidate: ‘bool std::operator==(const error_code&, const error_code&)’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:449:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:465:3: note: candidate: ‘bool std::operator==(const error_code&, const error_condition&)’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:465:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:480:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_condition&)’
  480 |   operator==(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:480:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  480 |   operator==(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:517:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_code&)’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:517:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from inc/value.hpp:3,
                 from inc/expr.hpp:3,
                 from inc/parser.hpp:3,
                 from src/parse/parser.cpp:1:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/char_traits.h:42,
                 from /usr/include/c++/14/string:42,
                 from inc/node.hpp:2,
                 from inc/expr.hpp:2:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from inc/ast.hpp:6:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/iosfwd:42,
                 from /usr/include/c++/14/ios:40:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43,
                 from /usr/include/c++/14/bits/locale_classes.h:40,
                 from /usr/include/c++/14/bits/ios_base.h:41,
                 from /usr/include/c++/14/ios:44:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator==(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  234 |     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:66,
                 from inc/ast.hpp:5:
/usr/include/c++/14/bits/stl_vector.h:2050:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator==(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2050 |     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2050:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/ios_base.h:46:
/usr/include/c++/14/system_error:449:3: note: candidate: ‘bool std::operator==(const error_code&, const error_code&)’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:449:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:465:3: note: candidate: ‘bool std::operator==(const error_code&, const error_condition&)’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:465:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:480:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_condition&)’
  480 |   operator==(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:480:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  480 |   operator==(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:517:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_code&)’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:517:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from src/kit-s/eval.cpp:5:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/iosfwd:42,
                 from /usr/include/c++/14/ios:40:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43,
                 from /usr/include/c++/14/bits/locale_classes.h:40,
                 from /usr/include/c++/14/bits/ios_base.h:41,
                 from /usr/include/c++/14/ios:44:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator==(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  234 |     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:66,
                 from src/kit-s/eval.cpp:2:
/usr/include/c++/14/bits/stl_vector.h:2050:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator==(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2050 |     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2050:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/ios_base.h:46:
/usr/include/c++/14/system_error:449:3: note: candidate: ‘bool std::operator==(const error_code&, const error_code&)’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:449:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:465:3: note: candidate: ‘bool std::operator==(const error_code&, const error_condition&)’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:465:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:480:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_condition&)’
  480 |   operator==(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:480:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  480 |   operator==(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:517:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_code&)’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:517:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
In file included from inc/ast.hpp:6,
                 from inc/eval.hpp:3:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/char_traits.h:42,
                 from /usr/include/c++/14/string:42,
                 from inc/ast.hpp:4:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:66,
                 from inc/ast.hpp:5:
/usr/include/c++/14/bits/stl_vector.h:2050:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator==(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2050 |     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2050:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant: In instantiation of ‘std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)> mutable [with auto:16 = const userdefined&; auto:17 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator!=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:16&&, auto:17)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1267:3:   required from ‘constexpr bool std::operator!=(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval.cpp:166:33:   required from here
  166 |         if (r.value != Value(0).value) return l / r;
      |                                 ^~~~~
/usr/include/c++/14/variant:1267:3: error: no match for ‘operator!=’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/postypes.h:197:5: note: candidate: ‘template<class _StateT> bool std::operator!=(const fpos<_StateT>&, const fpos<_StateT>&)’
  197 |     operator!=(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:197:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/allocator.h:243:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator!=(const allocator<_CharT>&, const allocator<_T2>&)’
  243 |     operator!=(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:243:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:455:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  455 |     operator!=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:455:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:500:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  500 |     operator!=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:500:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1686:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1686 |     operator!=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1686:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1753:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator!=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1753 |     operator!=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1753:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_pair.h:1052:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator!=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1052 |     operator!=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1052:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/string_view:651:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  651 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:651:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/string_view:658:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  658 |     operator!=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:658:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/string_view:666:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator!=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  666 |     operator!=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:666:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3833:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3833 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3833:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3847:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3847 |     operator!=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3847:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3860:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator!=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3860 |     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3860:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/tuple:2613:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator!=(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2613 |     operator!=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2613:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/streambuf_iterator.h:242:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator!=(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  242 |     operator!=(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/14/bits/streambuf_iterator.h:242:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/bits/stl_vector.h:2096:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator!=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2096 |     operator!=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2096:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/variant:1267:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator!=(const variant<_Types ...>&, const variant<_Types ...>&)’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1267:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1267:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1267 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(!=, not_equal)
      |   ^
/usr/include/c++/14/system_error:525:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_code&)’
  525 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:525:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  525 |   operator!=(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:530:3: note: candidate: ‘bool std::operator!=(const error_code&, const error_condition&)’
  530 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:530:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  530 |   operator!=(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:535:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_code&)’
  535 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:535:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  535 |   operator!=(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:540:3: note: candidate: ‘bool std::operator!=(const error_condition&, const error_condition&)’
  540 |   operator!=(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:540:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  540 |   operator!=(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/variant: In instantiation of ‘std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)> mutable [with auto:10 = const userdefined&; auto:11 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator< <int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:10&&, auto:11)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1264:3:   required from ‘constexpr bool std::operator<(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval.cpp:185:28:   required from here
  185 |         return l.value < r.value;
      |                            ^~~~~
/usr/include/c++/14/variant:1264:3: error: no match for ‘operator<’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:448:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  448 |     operator<(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:448:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:493:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  493 |     operator<(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:493:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1694:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1694 |     operator<(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1694:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1760:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1760 |     operator<(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1760:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_pair.h:1045:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator<(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1045 |     operator<(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1045:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/string_view:673:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  673 |     operator< (basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:673:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/string_view:680:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  680 |     operator< (basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:680:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/string_view:688:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  688 |     operator< (__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:688:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3874:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3874 |     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3874:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3888:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3888 |     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3888:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3901:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3901 |     operator<(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3901:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/tuple:2600:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator<(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2600 |     operator<(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2600:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/bits/stl_vector.h:2089:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator<(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2089 |     operator<(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2089:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/variant:1264:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator<(const variant<_Types ...>&, const variant<_Types ...>&)’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1264:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1264:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1264 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<, less)
      |   ^
/usr/include/c++/14/system_error:324:3: note: candidate: ‘bool std::operator<(const error_code&, const error_code&)’
  324 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:324:31: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  324 |   operator<(const error_code& __lhs, const error_code& __rhs) noexcept
      |             ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:507:3: note: candidate: ‘bool std::operator<(const error_condition&, const error_condition&)’
  507 |   operator<(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:507:36: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  507 |   operator<(const error_condition& __lhs,
      |             ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/variant: In instantiation of ‘std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)> mutable [with auto:20 = const userdefined&; auto:21 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator><int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:20&&, auto:21)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1269:3:   required from ‘constexpr bool std::operator>(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval.cpp:187:28:   required from here
  187 |         return l.value > r.value;
      |                            ^~~~~
/usr/include/c++/14/variant:1269:3: error: no match for ‘operator>’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:462:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator>(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  462 |     operator>(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:462:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:507:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator>(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  507 |     operator>(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:507:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1714:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator>(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1714 |     operator>(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1714:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1774:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator>(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1774 |     operator>(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1774:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_pair.h:1058:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator>(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1058 |     operator>(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1058:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/string_view:695:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  695 |     operator> (basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:695:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/string_view:702:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  702 |     operator> (basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:702:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/string_view:710:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  710 |     operator> (__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:710:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3915:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3915 |     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3915:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3929:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3929 |     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3929:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3942:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3942 |     operator>(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3942:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/tuple:2619:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator>(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2619 |     operator>(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2619:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/bits/stl_vector.h:2102:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator>(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2102 |     operator>(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2102:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
/usr/include/c++/14/variant:1269:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator>(const variant<_Types ...>&, const variant<_Types ...>&)’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1269:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1269:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1269 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>, greater)
      |   ^
In file included from inc/ast.hpp:6,
                 from inc/eval.hpp:3:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/vector:62,
                 from src/kit-s/eval_stmt.cpp:1:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:67:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:63:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_Tp1>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_Tp1>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:66:
/usr/include/c++/14/bits/stl_vector.h:2050:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator==(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2050 |     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2050:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/vector:87:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/char_traits.h:42,
                 from /usr/include/c++/14/string:42,
                 from inc/ast.hpp:4:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant: In instantiation of ‘std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)> mutable [with auto:12 = const userdefined&; auto:13 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator<=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:12&&, auto:13)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1265:3:   required from ‘constexpr bool std::operator<=(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval.cpp:189:29:   required from here
  189 |         return l.value <= r.value;
      |                             ^~~~~
/usr/include/c++/14/variant:1265:3: error: no match for ‘operator<=’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:469:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  469 |     operator<=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:469:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:513:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  513 |     operator<=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:513:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1704:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator<=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1704 |     operator<=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1704:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1767:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator<=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1767 |     operator<=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1767:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_pair.h:1064:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator<=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1064 |     operator<=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1064:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/string_view:717:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  717 |     operator<=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:717:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/string_view:724:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  724 |     operator<=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:724:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/string_view:732:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator<=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  732 |     operator<=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:732:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3956:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3956 |     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3956:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3970:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3970 |     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3970:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3983:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator<=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3983 |     operator<=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3983:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/tuple:2625:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator<=(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2625 |     operator<=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2625:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/bits/stl_vector.h:2108:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator<=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2108 |     operator<=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2108:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/variant:1265:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator<=(const variant<_Types ...>&, const variant<_Types ...>&)’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1265:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1265:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1265 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(<=, less_equal)
      |   ^
/usr/include/c++/14/variant: In instantiation of ‘std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)> mutable [with auto:18 = const userdefined&; auto:19 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator>=<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:18&&, auto:19)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1268:3:   required from ‘constexpr bool std::operator>=(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
src/kit-s/eval.cpp:191:29:   required from here
  191 |         return l.value >= r.value;
      |                             ^~~~~
/usr/include/c++/14/variant:1268:3: error: no match for ‘operator>=’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:476:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator>=(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  476 |     operator>=(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:476:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:520:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator>=(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  520 |     operator>=(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:520:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1724:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator>=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1724 |     operator>=(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1724:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1781:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator>=(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1781 |     operator>=(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1781:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_pair.h:1070:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator>=(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1070 |     operator>=(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1070:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/string_view:739:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>=(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  739 |     operator>=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:739:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/string_view:746:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>=(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  746 |     operator>=(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:746:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/string_view:754:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator>=(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  754 |     operator>=(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:754:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3997:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3997 |     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3997:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:4011:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>=(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 4011 |     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:4011:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:4024:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator>=(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 4024 |     operator>=(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:4024:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/tuple:2631:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator>=(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2631 |     operator>=(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2631:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/bits/stl_vector.h:2114:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator>=(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2114 |     operator>=(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2114:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
/usr/include/c++/14/variant:1268:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator>=(const variant<_Types ...>&, const variant<_Types ...>&)’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1268:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1268:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1268 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(>=, greater_equal)
      |   ^
In file included from inc/ast.hpp:6,
                 from inc/eval.hpp:3:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/char_traits.h:42,
                 from /usr/include/c++/14/string:42,
                 from inc/ast.hpp:4:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:66,
                 from inc/ast.hpp:5:
/usr/include/c++/14/bits/stl_vector.h:2050:5: note: candidate: ‘template<class _Tp, class _Alloc> bool std::operator==(const vector<_Tp, _Alloc>&, const vector<_Tp, _Alloc>&)’
 2050 |     operator==(const vector<_Tp, _Alloc>& __x, const vector<_Tp, _Alloc>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:2050:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::vector<_Tp, _Alloc>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/vector:65:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
In file included from /usr/include/c++/14/vector:65:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
In file included from inc/value.hpp:3,
                 from inc/lexer.hpp:8,
                 from src/kit-s/main.cpp:3:
/usr/include/c++/14/variant: In instantiation of ‘std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)> mutable [with auto:14 = const userdefined&; auto:15 = std::integral_constant<long unsigned int, 8>]’:
/usr/include/c++/14/type_traits:2655:26:   required by substitution of ‘template<class _Fn, class ... _Args> static std::__result_of_success<decltype (declval<_Fn>()((declval<_Args>)()...)), std::__invoke_other> std::__result_of_other_impl::_S_test(int) [with _Fn = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
 2655 |       std::declval<_Fn>()(std::declval<_Args>()...)
      |       ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/type_traits:2666:60:   required from ‘struct std::__result_of_impl<false, false, std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2666 |       using type = decltype(_S_test<_Functor, _ArgTypes...>(0));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~
/usr/include/c++/14/type_traits:2671:12:   required from ‘struct std::__invoke_result<std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>, const userdefined&, std::integral_constant<long unsigned int, 8> >’
 2671 |     struct __invoke_result
      |            ^~~~~~~~~~~~~~~
/usr/include/c++/14/bits/invoke.h:90:5:   required by substitution of ‘template<class _Callable, class ... _Args> constexpr typename std::__invoke_result<_Functor, _ArgTypes>::type std::__invoke(_Callable&&, _Args&& ...) [with _Callable = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Args = {const userdefined&, std::integral_constant<long unsigned int, 8>}]’
   90 |     __invoke(_Callable&& __fn, _Args&&... __args)
      |     ^~~~~~~~
/usr/include/c++/14/variant:1049:17:   required from ‘static constexpr decltype(auto) std::__detail::__variant::__gen_vtable_impl<std::__detail::__variant::_Multi_array<_Result_type (*)(_Visitor, _Variants ...)>, std::integer_sequence<long unsigned int, __indices ...> >::__visit_invoke(_Visitor&&, _Variants ...) [with _Result_type = std::__detail::__variant::__variant_idx_cookie; _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>&&; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}; long unsigned int ...__indices = {8}]’
 1049 |           std::__invoke(std::forward<_Visitor>(__visitor),
      |           ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1050 |               __element_by_index_or_cookie<__indices>(
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1051 |                 std::forward<_Variants>(__vars))...,
      |                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 1052 |               integral_constant<size_t, __indices>()...);
      |               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1827:5:   required from ‘constexpr decltype(auto) std::__do_visit(_Visitor&&, _Variants&& ...) [with _Result_type = __detail::__variant::__variant_idx_cookie; _Visitor = operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&}]’
 1827 |                   _GLIBCXX_VISIT_CASE(8)
      |                   ^~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:184:44:   required from ‘constexpr void std::__detail::__variant::__raw_idx_visit(_Visitor&&, _Variants&& ...) [with _Visitor = std::operator==<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>(const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&, const variant<int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate>&)::<lambda(auto:14&&, auto:15)>; _Variants = {const std::variant<int, short int, long int, float, double, bool, char, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, userdefined, std::monostate>&}]’
  184 |       std::__do_visit<__variant_idx_cookie>(std::forward<_Visitor>(__visitor),
      |       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  185 |           std::forward<_Variants>(__variants)...);
      |           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3:   required from ‘constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&) [with _Types = {int, short int, long int, float, double, bool, char, __cxx11::basic_string<char, char_traits<char>, allocator<char> >, userdefined, monostate}]’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/value.hpp:162:31:   required from here
  162 |         return value == other.value;
      |                               ^~~~~
/usr/include/c++/14/variant:1266:3: error: no match for ‘operator==’ (operand types are ‘const userdefined’ and ‘const userdefined’)
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/iosfwd:42,
                 from /usr/include/c++/14/ios:40,
                 from /usr/include/c++/14/ostream:40,
                 from /usr/include/c++/14/iostream:41,
                 from src/kit-s/main.cpp:1:
/usr/include/c++/14/bits/postypes.h:192:5: note: candidate: ‘template<class _StateT> bool std::operator==(const fpos<_StateT>&, const fpos<_StateT>&)’
  192 |     operator==(const fpos<_StateT>& __lhs, const fpos<_StateT>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/bits/postypes.h:192:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::fpos<_StateT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:43,
                 from /usr/include/c++/14/bits/locale_classes.h:40,
                 from /usr/include/c++/14/bits/ios_base.h:41,
                 from /usr/include/c++/14/ios:44:
/usr/include/c++/14/bits/allocator.h:235:5: note: candidate: ‘template<class _T1, class _T2> bool std::operator==(const allocator<_CharT>&, const allocator<_T2>&)’
  235 |     operator==(const allocator<_T1>&, const allocator<_T2>&)
      |     ^~~~~~~~
/usr/include/c++/14/bits/allocator.h:235:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::allocator<_CharT>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/string:48:
/usr/include/c++/14/bits/stl_iterator.h:441:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_Iterator>&)’
  441 |     operator==(const reverse_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:441:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:486:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const reverse_iterator<_Iterator>&, const reverse_iterator<_IteratorR>&)’
  486 |     operator==(const reverse_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:486:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::reverse_iterator<_Iterator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note: candidate: ‘template<class _IteratorL, class _IteratorR> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorR>&)’
 1667 |     operator==(const move_iterator<_IteratorL>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1667:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note: candidate: ‘template<class _Iterator> constexpr bool std::operator==(const move_iterator<_IteratorL>&, const move_iterator<_IteratorL>&)’
 1737 |     operator==(const move_iterator<_Iterator>& __x,
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_iterator.h:1737:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::move_iterator<_IteratorL>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/stl_algobase.h:64,
                 from /usr/include/c++/14/string:51:
/usr/include/c++/14/bits/stl_pair.h:1033:5: note: candidate: ‘template<class _T1, class _T2> constexpr bool std::operator==(const pair<_T1, _T2>&, const pair<_T1, _T2>&)’
 1033 |     operator==(const pair<_T1, _T2>& __x, const pair<_T1, _T2>& __y)
      |     ^~~~~~~~
/usr/include/c++/14/bits/stl_pair.h:1033:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::pair<_T1, _T2>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/basic_string.h:47,
                 from /usr/include/c++/14/string:54:
/usr/include/c++/14/string_view:629:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, __type_identity_t<basic_string_view<_CharT, _Traits> >)’
  629 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:629:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:637:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(basic_string_view<_CharT, _Traits>, basic_string_view<_CharT, _Traits>)’
  637 |     operator==(basic_string_view<_CharT, _Traits> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:637:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/string_view:644:5: note: candidate: ‘template<class _CharT, class _Traits> constexpr bool std::operator==(__type_identity_t<basic_string_view<_CharT, _Traits> >, basic_string_view<_CharT, _Traits>)’
  644 |     operator==(__type_identity_t<basic_string_view<_CharT, _Traits>> __x,
      |     ^~~~~~~~
/usr/include/c++/14/string_view:644:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘userdefined’ is not derived from ‘std::basic_string_view<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3755:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3755 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3755:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3772:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const __cxx11::basic_string<_CharT, _Traits, _Allocator>&, const _CharT*)’
 3772 |     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3772:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::__cxx11::basic_string<_CharT, _Traits, _Allocator>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/bits/basic_string.h:3819:5: note: candidate: ‘template<class _CharT, class _Traits, class _Alloc> bool std::operator==(const _CharT*, const __cxx11::basic_string<_CharT, _Traits, _Allocator>&)’
 3819 |     operator==(const _CharT* __lhs,
      |     ^~~~~~~~
/usr/include/c++/14/bits/basic_string.h:3819:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   mismatched types ‘const _CharT*’ and ‘userdefined’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/memory_resource.h:47,
                 from /usr/include/c++/14/string:68:
/usr/include/c++/14/tuple:2558:5: note: candidate: ‘template<class ... _TElements, class ... _UElements> constexpr bool std::operator==(const tuple<_UTypes ...>&, const tuple<_Elements ...>&)’
 2558 |     operator==(const tuple<_TElements...>& __t,
      |     ^~~~~~~~
/usr/include/c++/14/tuple:2558:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::tuple<_UTypes ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/locale_facets.h:48,
                 from /usr/include/c++/14/bits/basic_ios.h:37,
                 from /usr/include/c++/14/ios:46:
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note: candidate: ‘template<class _CharT, class _Traits> bool std::operator==(const istreambuf_iterator<_CharT, _Traits>&, const istreambuf_iterator<_CharT, _Traits>&)’
  234 |     operator==(const istreambuf_iterator<_CharT, _Traits>& __a,
      |     ^~~~~~~~
/usr/include/c++/14/bits/streambuf_iterator.h:234:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::istreambuf_iterator<_CharT, _Traits>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from inc/lexer.hpp:4:
/usr/include/c++/14/array:303:5: note: candidate: ‘template<class _Tp, long unsigned int _Nm> bool std::operator==(const array<_Tp, _Nm>&, const array<_Tp, _Nm>&)’
  303 |     operator==(const array<_Tp, _Nm>& __one, const array<_Tp, _Nm>& __two)
      |     ^~~~~~~~
/usr/include/c++/14/array:303:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::array<_Tp, _Nm>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from inc/lexer.hpp:7:
/usr/include/c++/14/optional:1232:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Tp, _Up> std::operator==(const optional<_Tp>&, const optional<_Up>&)’
 1232 |     operator==(const optional<_Tp>& __lhs, const optional<_Up>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1232:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1292:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator==(const optional<_Tp>&, nullopt_t)’
 1292 |     operator==(const optional<_Tp>& __lhs, nullopt_t) noexcept
      |     ^~~~~~~~
/usr/include/c++/14/optional:1292:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1303:5: note: candidate: ‘template<class _Tp> constexpr bool std::operator==(nullopt_t, const optional<_Tp>&)’
 1303 |     operator==(nullopt_t, const optional<_Tp>& __rhs) noexcept
      |     ^~~~~~~~
/usr/include/c++/14/optional:1303:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1360:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Tp, _Up> std::operator==(const optional<_Tp>&, const _Up&)’
 1360 |     operator==(const optional<_Tp>& __lhs, const _Up& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1360:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/optional:1366:5: note: candidate: ‘template<class _Tp, class _Up> constexpr std::__optional_eq_t<_Up, _Tp> std::operator==(const _Up&, const optional<_Tp>&)’
 1366 |     operator==(const _Up& __lhs, const optional<_Tp>& __rhs)
      |     ^~~~~~~~
/usr/include/c++/14/optional:1366:5: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::optional<_Tp>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
/usr/include/c++/14/variant:1266:3: note: candidate: ‘template<class ... _Types> constexpr bool std::operator==(const variant<_Types ...>&, const variant<_Types ...>&)’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/variant:1266:3: note:   template argument deduction/substitution failed:
/usr/include/c++/14/variant:1266:3: note:   ‘const userdefined’ is not derived from ‘const std::variant<_Types ...>’
 1266 |   _VARIANT_RELATION_FUNCTION_TEMPLATE(==, equal)
      |   ^
In file included from /usr/include/c++/14/bits/ios_base.h:46:
/usr/include/c++/14/system_error:449:3: note: candidate: ‘bool std::operator==(const error_code&, const error_code&)’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:449:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  449 |   operator==(const error_code& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:465:3: note: candidate: ‘bool std::operator==(const error_code&, const error_condition&)’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:465:32: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_code&’
  465 |   operator==(const error_code& __lhs, const error_condition& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:480:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_condition&)’
  480 |   operator==(const error_condition& __lhs,
      |   ^~~~~~~~
/usr/include/c++/14/system_error:480:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  480 |   operator==(const error_condition& __lhs,
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
/usr/include/c++/14/system_error:517:3: note: candidate: ‘bool std::operator==(const error_condition&, const error_code&)’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |   ^~~~~~~~
/usr/include/c++/14/system_error:517:37: note:   no known conversion for argument 1 from ‘const userdefined’ to ‘const std::error_condition&’
  517 |   operator==(const error_condition& __lhs, const error_code& __rhs) noexcept
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~
make: *** [Makefile:29: build/objects/lexer/lexer.o] Error 1
make: *** Waiting for unfinished jobs....
In file included from /usr/include/c++/14/vector:65:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
In file included from /usr/include/c++/14/vector:65:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
In file included from /usr/include/c++/14/memory:69,
                 from inc/value.hpp:8:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
In file included from /usr/include/c++/14/vector:65:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
inc/interpret.hpp: At global scope:
inc/interpret.hpp:42:14: warning: ‘Value call_subr(const std::string&, const std::vector<Value>&)’ defined but not used [-Wunused-function]
   42 | static Value call_subr(const std::string& name, const std::vector<Value>& args) {
      |              ^~~~~~~~~
inc/interpret.hpp:38:13: warning: ‘void decl_subr(const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const BlockStmt*)’ defined but not used [-Wunused-function]
   38 | static void decl_subr(const std::string& name, const std::vector<std::string>& params, const BlockStmt* body) {
      |             ^~~~~~~~~
make: *** [Makefile:29: build/objects/kit-s/eval_decl.o] Error 1
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_expr(const Expr*)’:
src/kit-s/eval_expr.cpp:31:1: warning: control reaches end of non-void function [-Wreturn-type]
   31 | }
      | ^
src/kit-s/eval_expr.cpp: In member function ‘Value Evaluator::eval_binary(const BinaryExpr*)’:
src/kit-s/eval_expr.cpp:68:1: warning: control reaches end of non-void function [-Wreturn-type]
   68 | }
      | ^
make: *** [Makefile:29: build/objects/parse/parser.o] Error 1
inc/interpret.hpp: At global scope:
inc/interpret.hpp:120:18: warning: ‘ValueType stringToValueType(const std::string&)’ defined but not used [-Wunused-function]
  120 | static ValueType stringToValueType(const std::string& s) {
      |                  ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:106:20: warning: ‘std::string valueTypeToString(ValueType)’ defined but not used [-Wunused-function]
  106 | static std::string valueTypeToString(ValueType t) {
      |                    ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:42:14: warning: ‘Value call_subr(const std::string&, const std::vector<Value>&)’ defined but not used [-Wunused-function]
   42 | static Value call_subr(const std::string& name, const std::vector<Value>& args) {
      |              ^~~~~~~~~
inc/interpret.hpp:38:13: warning: ‘void decl_subr(const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const BlockStmt*)’ defined but not used [-Wunused-function]
   38 | static void decl_subr(const std::string& name, const std::vector<std::string>& params, const BlockStmt* body) {
      |             ^~~~~~~~~
make: *** [Makefile:29: build/objects/kit-s/eval_stmt.o] Error 1
inc/interpret.hpp: At global scope:
inc/interpret.hpp:120:18: warning: ‘ValueType stringToValueType(const std::string&)’ defined but not used [-Wunused-function]
  120 | static ValueType stringToValueType(const std::string& s) {
      |                  ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:106:20: warning: ‘std::string valueTypeToString(ValueType)’ defined but not used [-Wunused-function]
  106 | static std::string valueTypeToString(ValueType t) {
      |                    ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:42:14: warning: ‘Value call_subr(const std::string&, const std::vector<Value>&)’ defined but not used [-Wunused-function]
   42 | static Value call_subr(const std::string& name, const std::vector<Value>& args) {
      |              ^~~~~~~~~
inc/interpret.hpp:38:13: warning: ‘void decl_subr(const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const BlockStmt*)’ defined but not used [-Wunused-function]
   38 | static void decl_subr(const std::string& name, const std::vector<std::string>& params, const BlockStmt* body) {
      |             ^~~~~~~~~
In file included from /usr/include/c++/14/memory:69,
                 from inc/value.hpp:8:
/usr/include/c++/14/bits/stl_uninitialized.h: In instantiation of ‘constexpr bool std::__check_constructible() [with _ValueType = unique_ptr<Decl>; _Tp = const unique_ptr<Decl>&]’:
/usr/include/c++/14/bits/stl_uninitialized.h:182:4:   required from ‘_ForwardIterator std::uninitialized_copy(_InputIterator, _InputIterator, _ForwardIterator) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*]’
  182 |         = _GLIBCXX_USE_ASSIGN_FOR_INIT(_ValueType2, _From);
      |           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:373:37:   required from ‘_ForwardIterator std::__uninitialized_copy_a(_InputIterator, _InputIterator, _ForwardIterator, allocator<_Tp>&) [with _InputIterator = const unique_ptr<Decl>*; _ForwardIterator = unique_ptr<Decl>*; _Tp = unique_ptr<Decl>]’
  373 |       return std::uninitialized_copy(__first, __last, __result);
      |              ~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:1697:33:   required from ‘void std::vector<_Tp, _Alloc>::_M_range_initialize(_ForwardIterator, _ForwardIterator, std::forward_iterator_tag) [with _ForwardIterator = const std::unique_ptr<Decl>*; _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >]’
 1697 |             std::__uninitialized_copy_a(__first, __last,
      |             ~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~
 1698 |                                         this->_M_impl._M_start,
      |                                         ~~~~~~~~~~~~~~~~~~~~~~~
 1699 |                                         _M_get_Tp_allocator());
      |                                         ~~~~~~~~~~~~~~~~~~~~~~
/usr/include/c++/14/bits/stl_vector.h:682:21:   required from ‘std::vector<_Tp, _Alloc>::vector(std::initializer_list<_Tp>, const allocator_type&) [with _Tp = std::unique_ptr<Decl>; _Alloc = std::allocator<std::unique_ptr<Decl> >; allocator_type = std::allocator<std::unique_ptr<Decl> >]’
  682 |         _M_range_initialize(__l.begin(), __l.end(),
      |         ~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~
  683 |                             random_access_iterator_tag());
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
inc/stmt.hpp:36:55:   required from here
   36 |     std::vector<std::unique_ptr<Decl>> decl = {nullptr}; // optional declarations (for tools/kits)
      |                                                       ^
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: error: static assertion failed: result type must be constructible from input type
   90 |       static_assert(is_constructible<_ValueType, _Tp>::value,
      |                                                        ^~~~~
/usr/include/c++/14/bits/stl_uninitialized.h:90:56: note: ‘std::integral_constant<bool, false>::value’ evaluates to false
make: *** [Makefile:29: build/objects/kit-s/eval_entry.o] Error 1
inc/interpret.hpp: At global scope:
inc/interpret.hpp:120:18: warning: ‘ValueType stringToValueType(const std::string&)’ defined but not used [-Wunused-function]
  120 | static ValueType stringToValueType(const std::string& s) {
      |                  ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:106:20: warning: ‘std::string valueTypeToString(ValueType)’ defined but not used [-Wunused-function]
  106 | static std::string valueTypeToString(ValueType t) {
      |                    ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:38:13: warning: ‘void decl_subr(const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const BlockStmt*)’ defined but not used [-Wunused-function]
   38 | static void decl_subr(const std::string& name, const std::vector<std::string>& params, const BlockStmt* body) {
      |             ^~~~~~~~~
inc/interpret.hpp: At global scope:
inc/interpret.hpp:120:18: warning: ‘ValueType stringToValueType(const std::string&)’ defined but not used [-Wunused-function]
  120 | static ValueType stringToValueType(const std::string& s) {
      |                  ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:106:20: warning: ‘std::string valueTypeToString(ValueType)’ defined but not used [-Wunused-function]
  106 | static std::string valueTypeToString(ValueType t) {
      |                    ^~~~~~~~~~~~~~~~~
inc/interpret.hpp:42:14: warning: ‘Value call_subr(const std::string&, const std::vector<Value>&)’ defined but not used [-Wunused-function]
   42 | static Value call_subr(const std::string& name, const std::vector<Value>& args) {
      |              ^~~~~~~~~
inc/interpret.hpp:38:13: warning: ‘void decl_subr(const std::string&, const std::vector<std::__cxx11::basic_string<char> >&, const BlockStmt*)’ defined but not used [-Wunused-function]
   38 | static void decl_subr(const std::string& name, const std::vector<std::string>& params, const BlockStmt* body) {
      |             ^~~~~~~~~
make: *** [Makefile:29: build/objects/kit-s/eval_expr.o] Error 1
make: *** [Makefile:29: build/objects/kit-s/eval.o] Error 1
make: *** [Makefile:29: build/objects/kit-s/main.o] Error 1
